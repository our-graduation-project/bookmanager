<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hnist.bookmanager.mapper.BorrowDetailMapper">
  <resultMap id="BaseResultMap" type="cn.hnist.bookmanager.model.BorrowDetail">
    <id column="borrow_id" jdbcType="INTEGER" property="borrowId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="borrow_date" jdbcType="TIMESTAMP" property="borrowDate" />
    <result column="should_return_date" jdbcType="TIMESTAMP" property="shouldReturnDate" />
    <result column="real_return_date" jdbcType="TIMESTAMP" property="realReturnDate" />
    <result column="fine" jdbcType="DOUBLE" property="fine" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    borrow_id, user_id, book_id, borrow_date, should_return_date, real_return_date, fine, 
    status
  </sql>
  <select id="selectByExample" parameterType="cn.hnist.bookmanager.model.BorrowDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrow_detail
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from borrow_detail
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hnist.bookmanager.model.BorrowDetailExample">
    delete from borrow_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hnist.bookmanager.model.BorrowDetail">
    <selectKey keyProperty="borrowId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into borrow_detail (user_id, book_id, borrow_date, 
      should_return_date, real_return_date, fine, 
      status)
    values (#{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{borrowDate,jdbcType=TIMESTAMP}, 
      #{shouldReturnDate,jdbcType=TIMESTAMP}, #{realReturnDate,jdbcType=TIMESTAMP}, #{fine,jdbcType=DOUBLE}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.hnist.bookmanager.model.BorrowDetail">
    <selectKey keyProperty="borrowId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into borrow_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="shouldReturnDate != null">
        should_return_date,
      </if>
      <if test="realReturnDate != null">
        real_return_date,
      </if>
      <if test="fine != null">
        fine,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shouldReturnDate != null">
        #{shouldReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnDate != null">
        #{realReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hnist.bookmanager.model.BorrowDetailExample" resultType="java.lang.Long">
    select count(*) from borrow_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update borrow_detail
    <set>
      <if test="record.borrowId != null">
        borrow_id = #{record.borrowId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowDate != null">
        borrow_date = #{record.borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shouldReturnDate != null">
        should_return_date = #{record.shouldReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realReturnDate != null">
        real_return_date = #{record.realReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fine != null">
        fine = #{record.fine,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update borrow_detail
    set borrow_id = #{record.borrowId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      borrow_date = #{record.borrowDate,jdbcType=TIMESTAMP},
      should_return_date = #{record.shouldReturnDate,jdbcType=TIMESTAMP},
      real_return_date = #{record.realReturnDate,jdbcType=TIMESTAMP},
      fine = #{record.fine,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hnist.bookmanager.model.BorrowDetail">
    update borrow_detail
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shouldReturnDate != null">
        should_return_date = #{shouldReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="realReturnDate != null">
        real_return_date = #{realReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hnist.bookmanager.model.BorrowDetail">
    update borrow_detail
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      should_return_date = #{shouldReturnDate,jdbcType=TIMESTAMP},
      real_return_date = #{realReturnDate,jdbcType=TIMESTAMP},
      fine = #{fine,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER}
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
</mapper>