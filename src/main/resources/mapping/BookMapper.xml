<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hnist.bookmanager.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="cn.hnist.bookmanager.model.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_picture" jdbcType="VARCHAR" property="bookPicture" />
    <result column="book_isbn" jdbcType="VARCHAR" property="bookIsbn" />
    <result column="book_type" jdbcType="INTEGER" property="bookType" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="book_count" jdbcType="INTEGER" property="bookCount" />
    <result column="book_num" jdbcType="INTEGER" property="bookNum" />
    <result column="bookshelf" jdbcType="INTEGER" property="bookshelf" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.hnist.bookmanager.model.Book">
    <result column="introduce" jdbcType="LONGVARCHAR" property="introduce" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, book_name, book_picture, book_isbn, book_type, author, price, book_count, 
    book_num, bookshelf
  </sql>
  <sql id="Blob_Column_List">
    introduce
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.hnist.bookmanager.model.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.hnist.bookmanager.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hnist.bookmanager.model.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hnist.bookmanager.model.Book">
    <selectKey keyProperty="bookId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book (book_name, book_picture, book_isbn, 
      book_type, author, price, 
      book_count, book_num, bookshelf, 
      introduce)
    values (#{bookName,jdbcType=VARCHAR}, #{bookPicture,jdbcType=VARCHAR}, #{bookIsbn,jdbcType=VARCHAR}, 
      #{bookType,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{bookCount,jdbcType=INTEGER}, #{bookNum,jdbcType=INTEGER}, #{bookshelf,jdbcType=INTEGER}, 
      #{introduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hnist.bookmanager.model.Book">
    <selectKey keyProperty="bookId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookPicture != null">
        book_picture,
      </if>
      <if test="bookIsbn != null">
        book_isbn,
      </if>
      <if test="bookType != null">
        book_type,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="bookCount != null">
        book_count,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="bookshelf != null">
        bookshelf,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPicture != null">
        #{bookPicture,jdbcType=VARCHAR},
      </if>
      <if test="bookIsbn != null">
        #{bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bookType != null">
        #{bookType,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="bookCount != null">
        #{bookCount,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="bookshelf != null">
        #{bookshelf,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hnist.bookmanager.model.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPicture != null">
        book_picture = #{record.bookPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.bookIsbn != null">
        book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="record.bookType != null">
        book_type = #{record.bookType,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.bookCount != null">
        book_count = #{record.bookCount,jdbcType=INTEGER},
      </if>
      <if test="record.bookNum != null">
        book_num = #{record.bookNum,jdbcType=INTEGER},
      </if>
      <if test="record.bookshelf != null">
        bookshelf = #{record.bookshelf,jdbcType=INTEGER},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_picture = #{record.bookPicture,jdbcType=VARCHAR},
      book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
      book_type = #{record.bookType,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      book_count = #{record.bookCount,jdbcType=INTEGER},
      book_num = #{record.bookNum,jdbcType=INTEGER},
      bookshelf = #{record.bookshelf,jdbcType=INTEGER},
      introduce = #{record.introduce,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_picture = #{record.bookPicture,jdbcType=VARCHAR},
      book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
      book_type = #{record.bookType,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      book_count = #{record.bookCount,jdbcType=INTEGER},
      book_num = #{record.bookNum,jdbcType=INTEGER},
      bookshelf = #{record.bookshelf,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hnist.bookmanager.model.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPicture != null">
        book_picture = #{bookPicture,jdbcType=VARCHAR},
      </if>
      <if test="bookIsbn != null">
        book_isbn = #{bookIsbn,jdbcType=VARCHAR},
      </if>
      <if test="bookType != null">
        book_type = #{bookType,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="bookCount != null">
        book_count = #{bookCount,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="bookshelf != null">
        bookshelf = #{bookshelf,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.hnist.bookmanager.model.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_picture = #{bookPicture,jdbcType=VARCHAR},
      book_isbn = #{bookIsbn,jdbcType=VARCHAR},
      book_type = #{bookType,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      book_count = #{bookCount,jdbcType=INTEGER},
      book_num = #{bookNum,jdbcType=INTEGER},
      bookshelf = #{bookshelf,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=LONGVARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hnist.bookmanager.model.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_picture = #{bookPicture,jdbcType=VARCHAR},
      book_isbn = #{bookIsbn,jdbcType=VARCHAR},
      book_type = #{bookType,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      book_count = #{bookCount,jdbcType=INTEGER},
      book_num = #{bookNum,jdbcType=INTEGER},
      bookshelf = #{bookshelf,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>


  <select id="selectByLabelName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    where book_id in (
      select book_id from
      label l left join label_relation r
      on l.label_id=r.label_id where label_name=#{labelName}
    )
  </select>
</mapper>